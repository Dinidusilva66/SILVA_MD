cmd({
  pattern: "hack", // Command name
  desc: "Displays a dynamic loading bar for fun.",
  category: "fun",
  react: 'üíª',
  filename: __filename
}, async (conn, mek, m, { from, reply }) => {
  try {
    // ‡∂¥‡∑Ö‡∂∏‡∑î ‡∂¥‡∂´‡∑í‡∑Ä‡∑í‡∂©‡∂∫
    const steps = [
      'üíª *HACK STARTING...* üíª',
      'üîß *Initializing tools...* üõ†Ô∏è',
      'üåê *Connecting to remote servers...*',
    ];

    // ‡∂¥‡∑Ö‡∂∏‡∑î ‡∂¥‡∂´‡∑í‡∑Ä‡∑í‡∂©‡∂∫ ‡∂ë‡∑Ä‡∑ì‡∂∏
    let sentMessage = await conn.sendMessage(from, {
      text: steps[0] // ‡∂¥‡∑Ö‡∂∏‡∑î ‡∂¥‡∂´‡∑í‡∑Ä‡∑í‡∂©‡∂∫
    });

    // Loading bar ‡∂ë‡∂ö‡∑ö steps
    const loadingBar = [
      '```[‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí] 10%```',
      '```[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí] 20%```',
      '```[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí] 30%```',
      '```[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí] 40%```',
      '```[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí] 50%```',
      '```[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí] 60%```',
      '```[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí] 70%```',
      '```[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí] 80%```',
      '```[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí] 90%```',
      '```[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì] 100%```'
    ];

    // Delay ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏
    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

    // Loading Bar ‡∂ë‡∂ö update ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è
    for (let i = 0; i < loadingBar.length; i++) {
      await delay(1000); // 1-seconds delay ‡∂ë‡∂ö‡∂ö‡∑ä
      await conn.relayMessage(from, {
        protocolMessage: {
          key: sentMessage.key, // Original message ‡∂ë‡∂ö reference ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è
          type: 13, // Edited message type
          editedMessage: {
            conversation: loadingBar[i] // Message ‡∂ë‡∂ö update ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è
          }
        }
      }, {});
    }

    // Loading ‡∂ë‡∂ö ‡∂Ö‡∑Ä‡∑É‡∂±‡∑ä ‡∑Ä‡∑ñ ‡∂¥‡∑É‡∑î Final message ‡∂ë‡∂ö‡∂ö‡∑ä
    await new Promise(resolve => setTimeout(resolve, 1000)); // 1 second delay ‡∂ë‡∂ö
    await conn.sendMessage(from, {
      text: 'üîì *System Breach: Successful!* üéØ',
    });

    // Optional extra messages
    await delay(1000);
    await conn.sendMessage(from, {
      text: '*üì° Transmitting data...* üì§',
    });

    await delay(1000);
    await conn.sendMessage(from, {
      text: '_üïµÔ∏è‚Äç‚ôÇÔ∏è Ensuring stealth mode..._ ü§´',
    });

    await delay(1000);
    await conn.sendMessage(from, {
      text: '‚ö†Ô∏è *Note:* This is for demonstration purposes only.',
    });

    await delay(1000);
    await conn.sendMessage(from, {
      text: '> *SILVA-MD HACKING COMPLETE ‚ò£*',
    });

  } catch (error) {
    console.log(error);
    reply(`‚ùå *Error!* ${error.message}`);
  }
});
